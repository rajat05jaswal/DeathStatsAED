/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.DeathStatResearchRole;

import Business.DeadPerson.DeadPerson;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Interface.DeathStatAnalystRole.AnalysingCurrentDeathJPanel;
import java.awt.CardLayout;
import java.awt.Color;
import static java.awt.Transparency.OPAQUE;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Rajat
 */
public class EntryDSResearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EntryDSResearchJPanel
     */
    private JPanel container;
    private EcoSystem business;
    private Organization organization;
    private UserAccount account;
    private Enterprise enterprise;
    public EntryDSResearchJPanel(JPanel container, Enterprise enterprise, Organization organization, UserAccount account, EcoSystem business) {
        initComponents();
        this.container=container;
        this.organization = organization;
        this.account = account;
        this.business = business;
        this.enterprise=enterprise;
        AnalystName.setText(account.getEmployee().getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        AnalystName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        accidentResearch = new javax.swing.JButton();
        crimeResearch = new javax.swing.JButton();
        naturalResearch = new javax.swing.JButton();
        dieasesResearch = new javax.swing.JButton();
        calamityResearch = new javax.swing.JButton();
        visualizeDeaths = new javax.swing.JButton();
        chartJPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome DeathStats Researcher:");

        AnalystName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AnalystName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AnalystName.setText("<value>");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Select the death to research-");

        accidentResearch.setBackground(new java.awt.Color(51, 153, 255));
        accidentResearch.setText("Accident");
        accidentResearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        accidentResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accidentResearchActionPerformed(evt);
            }
        });

        crimeResearch.setBackground(new java.awt.Color(51, 153, 255));
        crimeResearch.setText("Crime");
        crimeResearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        crimeResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crimeResearchActionPerformed(evt);
            }
        });

        naturalResearch.setBackground(new java.awt.Color(51, 153, 255));
        naturalResearch.setText("Natural");
        naturalResearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        naturalResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naturalResearchActionPerformed(evt);
            }
        });

        dieasesResearch.setBackground(new java.awt.Color(51, 153, 255));
        dieasesResearch.setText("Dieases");
        dieasesResearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dieasesResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieasesResearchActionPerformed(evt);
            }
        });

        calamityResearch.setBackground(new java.awt.Color(51, 153, 255));
        calamityResearch.setText("Calamity");
        calamityResearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        calamityResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calamityResearchActionPerformed(evt);
            }
        });

        visualizeDeaths.setBackground(new java.awt.Color(102, 153, 255));
        visualizeDeaths.setText("Visualize Deaths");
        visualizeDeaths.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        visualizeDeaths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizeDeathsActionPerformed(evt);
            }
        });

        chartJPanel.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout chartJPanelLayout = new javax.swing.GroupLayout(chartJPanel);
        chartJPanel.setLayout(chartJPanelLayout);
        chartJPanelLayout.setHorizontalGroup(
            chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );
        chartJPanelLayout.setVerticalGroup(
            chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(1, 1, 1)
                                .addComponent(AnalystName))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accidentResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(naturalResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dieasesResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crimeResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(calamityResearch, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                    .addComponent(visualizeDeaths, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(chartJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(AnalystName, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accidentResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crimeResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(naturalResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieasesResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(calamityResearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(visualizeDeaths, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chartJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(202, 202, 202))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accidentResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accidentResearchActionPerformed
        // TODO add your handling code here:
        ArrayList<DeadPerson> deadListAccident= new ArrayList<>();
        for (DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                if(dp.getGeneralReasonOfDeath().equalsIgnoreCase("accident")){
                    deadListAccident.add(dp);
                }
            }
        }
        if(deadListAccident.size()==0){
            JOptionPane.showMessageDialog(null, " No Deaths Registered with Accident");
            return;
        }
        AccidentJPanel accidentJPanel=new AccidentJPanel(container,organization,account,business);
                    container.add("accidentJPanel",accidentJPanel);
                    CardLayout layout=(CardLayout)container.getLayout();
                    layout.next(container);
    }//GEN-LAST:event_accidentResearchActionPerformed

    private void naturalResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naturalResearchActionPerformed
        // TODO add your handling code here:    
         ArrayList<DeadPerson> deadListAccident= new ArrayList<>();
        for (DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                if(dp.getGeneralReasonOfDeath().equalsIgnoreCase("natural")){
                    deadListAccident.add(dp);
                }
            }
        }
        if(deadListAccident.size()==0){
            JOptionPane.showMessageDialog(null, " No Deaths Registered with Natural");
            return;
        }
        NaturalJPanel naturalJPanel=new NaturalJPanel(container,organization,account,business);
        container.add("naturalJPanel",naturalJPanel);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
          
    }//GEN-LAST:event_naturalResearchActionPerformed

    private void calamityResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calamityResearchActionPerformed
        // TODO add your handling code here:
        ArrayList<DeadPerson> deadListAccident= new ArrayList<>();
        for (DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                if(dp.getGeneralReasonOfDeath().equalsIgnoreCase("calamity")){
                    deadListAccident.add(dp);
                }
            }
        }
        if(deadListAccident.size()==0){
            JOptionPane.showMessageDialog(null, " No Deaths Registered with Calamity");
            return;
        }
        CalamityJPanel calamityJPanel=new CalamityJPanel(container,organization,account,business);
        container.add("calamityJPanel",calamityJPanel);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_calamityResearchActionPerformed

    private void dieasesResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieasesResearchActionPerformed
        // TODO add your handling code here:
         ArrayList<DeadPerson> deadListAccident= new ArrayList<>();
        for (DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                if(dp.getGeneralReasonOfDeath().equalsIgnoreCase("Diseases")){
                    deadListAccident.add(dp);
                }
            }
        }
        if(deadListAccident.size()==0){
            JOptionPane.showMessageDialog(null, " No Deaths Registered with Dieases");
            return;
        }
        
        DieasesJPanel dieasesJPanel=new DieasesJPanel(container,organization,account,business);
        container.add("dieasesJPanel",dieasesJPanel);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_dieasesResearchActionPerformed

    private void crimeResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crimeResearchActionPerformed
        // TODO add your handling code here:
         ArrayList<DeadPerson> deadListAccident= new ArrayList<>();
        for (DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                if(dp.getGeneralReasonOfDeath().equalsIgnoreCase("Crime")){
                    deadListAccident.add(dp);
                }
            }
        }
        if(deadListAccident.size()==0){
            JOptionPane.showMessageDialog(null, " No Deaths Registered with Crime");
            return;
        }
        
        CrimeJPanel crimeJPanel=new CrimeJPanel(container,organization,account,business);
        container.add("crimeJPanel",crimeJPanel);
        CardLayout layout=(CardLayout)container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_crimeResearchActionPerformed

    private void visualizeDeathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizeDeathsActionPerformed
        // TODO add your handling code here:
        int natural=0;
        int accident=0;
        int crime=0;
        int calamity=0;
        int diseases=0;
        for(DeadPerson dp: business.getDeadpeople().getDeadPeople()){
            if(dp.getGeneralReasonOfDeath()!=null){
                switch(dp.getGeneralReasonOfDeath()){
                    case "Natural":
                    natural++;
                    break;
                    case "Accident":
                    accident++;
                    break;
                    case "Crime":
                    crime++;
                    break;
                    case "Calamity":
                    calamity++;
                    break;
                    case "Diseases":
                    diseases++;
                    break;
                }
            }
        }
        DefaultPieDataset pieDataSet= new DefaultPieDataset();
        pieDataSet.setValue("Natural", new Integer(natural));
        pieDataSet.setValue("Accident", new Integer(accident));
        pieDataSet.setValue("Crime", new Integer(crime));
        pieDataSet.setValue("Calamity", new Integer(calamity));
        pieDataSet.setValue("Diseases", new Integer(diseases));
        JFreeChart chart=ChartFactory.createPieChart("Pie Chart for Death Causes", pieDataSet, true, true, true);

        PiePlot p=(PiePlot) chart.getPlot();
        p.setSectionPaint("Natural", Color.BLUE);
        p.setSectionPaint("crime", Color.MAGENTA);
        p.setSectionPaint("Calamity", Color.red);
        p.setSectionPaint("Diseases", Color.ORANGE);
        p.setSectionPaint("Accident", Color.GRAY);
        ChartPanel chartPanel = new ChartPanel(chart, false);
        chartJPanel.add(chartPanel);
        chartPanel.setSize(500,500);
        chartPanel.setVisible(true);

    }//GEN-LAST:event_visualizeDeathsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnalystName;
    private javax.swing.JButton accidentResearch;
    private javax.swing.JButton calamityResearch;
    private javax.swing.JPanel chartJPanel;
    private javax.swing.JButton crimeResearch;
    private javax.swing.JButton dieasesResearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton naturalResearch;
    private javax.swing.JButton visualizeDeaths;
    // End of variables declaration//GEN-END:variables
}
